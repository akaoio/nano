typedef struct {
    int32_t      base_domain_id;        
    int8_t       embed_flash;           
    int8_t       enabled_cpus_num;      
    uint32_t     enabled_cpus_mask;     
    uint8_t      n_batch;               
    int8_t       use_cross_attn;        
    uint8_t      reserved[104];         
} RKLLMExtendParam;
typedef struct {
    const char* model_path;         
    int32_t max_context_len;        
    int32_t max_new_tokens;         
    int32_t top_k;                  
    int32_t n_keep;                 
    float top_p;                    
    float temperature;              
    float repeat_penalty;           
    float frequency_penalty;        
    float presence_penalty;         
    int32_t mirostat;               
    float mirostat_tau;             
    float mirostat_eta;             
    bool skip_special_token;        
    bool is_async;                  
    const char* img_start;          
    const char* img_end;            
    const char* img_content;        
    RKLLMExtendParam extend_param; 
} RKLLMParam;
typedef struct {
    const char* lora_adapter_path; 
    const char* lora_adapter_name; 
    float scale;                   
} RKLLMLoraAdapter;
typedef struct {
    float* embed;      
    size_t n_tokens;   
} RKLLMEmbedInput;
typedef struct {
    int32_t* input_ids; 
    size_t n_tokens;    
} RKLLMTokenInput;
typedef struct {
    char* prompt;           
    float* image_embed;     
    size_t n_image_tokens;  
    size_t n_image;         
    size_t image_width;     
    size_t image_height;    
} RKLLMMultiModelInput;
typedef struct {
    const char* role;          
    bool enable_thinking;      
    RKLLMInputType input_type; 
    union {
        const char* prompt_input;               
        RKLLMEmbedInput embed_input;            
        RKLLMTokenInput token_input;            
        RKLLMMultiModelInput multimodal_input;  
    };
} RKLLMInput;
typedef struct {
    const char* lora_adapter_name; 
} RKLLMLoraParam;
typedef struct {
    int save_prompt_cache;          
    const char* prompt_cache_path;  
} RKLLMPromptCacheParam;
typedef struct {
    float* encoder_k_cache;   
    float* encoder_v_cache;   
    float* encoder_mask;      
    int32_t* encoder_pos;     
    int num_tokens;           
} RKLLMCrossAttnParam;
typedef struct {
    RKLLMInferMode mode;                        
    RKLLMLoraParam* lora_params;                
    RKLLMPromptCacheParam* prompt_cache_params; 
    int keep_history;                           
} RKLLMInferParam;
typedef struct {
    const float* hidden_states; 
    int embd_size;              
    int num_tokens;             
} RKLLMResultLastHiddenLayer;
typedef struct {
    const float* logits;        
    int vocab_size;             
    int num_tokens;             
} RKLLMResultLogits;
typedef struct {
    float prefill_time_ms;      
    int prefill_tokens;         
    float generate_time_ms;     
    int generate_tokens;        
    float memory_usage_mb;      
} RKLLMPerfStat;
typedef struct {
    const char* text;                             
    int32_t token_id;                             
    RKLLMResultLastHiddenLayer last_hidden_layer; 
    RKLLMResultLogits logits;                     
    RKLLMPerfStat perf;                          
} RKLLMResult;
